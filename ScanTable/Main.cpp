#include "TScanTable.h"
#include "TRecord.h"
#include <string>
#include <iostream>
#include <locale>

using namespace std;

int main()
{
	TRecord<int> e1("a", 1); // создадим элемент е1 с ключом А и данными 1
	TRecord<int> e2("b", 2); // создадим элемент е2 с ключом В и данными 2
	TRecord<int> e3("c", 3); // создадим элемент е3 с ключом С и данными 3
	TRecord<int> e4(e1); // создадим элемент е4 с помощью конструтора копирования от е1
	TRecord<int> e5; // создадим элемент е5 по умолчанию (со значениями "" и 0)
  TScanTable<int> t1(5); // создадим таблицу для хранения элементов
  t1.Insert(e1); // поместим в таблицу е1
  t1.Insert(e2); // поместим в таблицу е2
	t1.Insert(e3); // поместим в таблицу е3
	t1.Insert(e4); // поместим в таблицу е4
	t1.Insert(e5); // поместим в таблицу е5
	bool finding1, finding2, res; // создадим переменные для результатов поиска и одну для сравнения
	finding1 = t1.Find(3); // найдем элемент со значением 3
	finding2 = t1.Find(6); // попробуем найти элемент со значением 6t1.Delete(2) // удалим элемент со значением 2
	if (finding1 != finding2)
		res = true; // т.к. результаты не  должны быть равны, всё должно быть успешно, и res должен быть равен 1
	return 0;
}
